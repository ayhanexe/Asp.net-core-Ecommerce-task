// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_net_core_entity_framework_e_commerce.DAL;

namespace asp_net_core_entity_framework_e_commerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211203234211_bugfix3")]
    partial class bugfix3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Basket", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("userIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userIdid");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.BasketItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("basketIdid")
                        .HasColumnType("int");

                    b.Property<int?>("productIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("basketIdid");

                    b.HasIndex("productIdid");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Brand", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Favorite", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("userIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userIdid");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.FavoriteItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("favoriteIdid")
                        .HasColumnType("int");

                    b.Property<int?>("productIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("favoriteIdid");

                    b.HasIndex("productIdid");

                    b.ToTable("FavoriteItems");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("productIdid")
                        .HasColumnType("int");

                    b.Property<int?>("userIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productIdid");

                    b.HasIndex("userIdid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("brandIdid")
                        .HasColumnType("int");

                    b.Property<int?>("categoryIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("brandIdid");

                    b.HasIndex("categoryIdid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("addressOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userRoleid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userRoleid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Basket", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.User", "userId")
                        .WithMany()
                        .HasForeignKey("userIdid");

                    b.Navigation("userId");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.BasketItem", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Basket", "basketId")
                        .WithMany()
                        .HasForeignKey("basketIdid");

                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Product", "productId")
                        .WithMany()
                        .HasForeignKey("productIdid");

                    b.Navigation("basketId");

                    b.Navigation("productId");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Favorite", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.User", "userId")
                        .WithMany()
                        .HasForeignKey("userIdid");

                    b.Navigation("userId");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.FavoriteItem", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Favorite", "favoriteId")
                        .WithMany()
                        .HasForeignKey("favoriteIdid");

                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Product", "productId")
                        .WithMany()
                        .HasForeignKey("productIdid");

                    b.Navigation("favoriteId");

                    b.Navigation("productId");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Order", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Product", "productId")
                        .WithMany()
                        .HasForeignKey("productIdid");

                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.User", "userId")
                        .WithMany()
                        .HasForeignKey("userIdid");

                    b.Navigation("productId");

                    b.Navigation("userId");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.Product", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Brand", "brandId")
                        .WithMany()
                        .HasForeignKey("brandIdid");

                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Category", "categoryId")
                        .WithMany()
                        .HasForeignKey("categoryIdid");

                    b.Navigation("brandId");

                    b.Navigation("categoryId");
                });

            modelBuilder.Entity("asp_core_entity_framework_e_commerce_task.Models.User", b =>
                {
                    b.HasOne("asp_core_entity_framework_e_commerce_task.Models.Role", "userRole")
                        .WithMany()
                        .HasForeignKey("userRoleid");

                    b.Navigation("userRole");
                });
#pragma warning restore 612, 618
        }
    }
}
